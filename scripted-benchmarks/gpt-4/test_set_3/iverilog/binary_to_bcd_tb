#! /usr/bin/vvp
:ivl_version "12.0 (stable)" "(v12_0-dirty)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/lib/ivl/system.vpi";
:vpi_module "/usr/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/ivl/va_math.vpi";
S_0x5570b5d118b0 .scope module, "tb_binary_to_bcd" "tb_binary_to_bcd" 2 3;
 .timescale -9 -12;
v0x5570b5d3cb50_0 .var "binary_input", 4 0;
v0x5570b5d3cc10_0 .var "expected_ones_value", 3 0;
v0x5570b5d3ccd0_0 .var "expected_tens_value", 3 0;
v0x5570b5d3cd90_0 .var "num_passed", 7 0;
v0x5570b5d3ce70_0 .net "ones", 3 0, v0x5570b5d3c850_0;  1 drivers
v0x5570b5d3cf80_0 .net "tens", 3 0, v0x5570b5d3c9f0_0;  1 drivers
v0x5570b5d3d020_0 .var/i "test_index", 31 0;
v0x5570b5d3d0e0_0 .var "vcd_clk", 0 0;
S_0x5570b5d22520 .scope module, "uut" "binary_to_bcd" 2 8, 3 1 0, S_0x5570b5d118b0;
 .timescale 0 0;
    .port_info 0 /INPUT 5 "binary_input";
    .port_info 1 /OUTPUT 4 "tens";
    .port_info 2 /OUTPUT 4 "ones";
v0x5570b5d3c750_0 .net "binary_input", 4 0, v0x5570b5d3cb50_0;  1 drivers
v0x5570b5d3c850_0 .var "ones", 3 0;
v0x5570b5d3c930_0 .var/i "temp", 31 0;
v0x5570b5d3c9f0_0 .var "tens", 3 0;
E_0x5570b5d1f030 .event anyedge, v0x5570b5d3c750_0, v0x5570b5d3c850_0, v0x5570b5d3c9f0_0, v0x5570b5d3c930_0;
S_0x5570b5d22780 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 14, 3 14 0, S_0x5570b5d22520;
 .timescale 0 0;
v0x5570b5d13790_0 .var/i "i", 31 0;
    .scope S_0x5570b5d22520;
T_0 ;
    %wait E_0x5570b5d1f030;
    %load/vec4 v0x5570b5d3c750_0;
    %pad/u 32;
    %store/vec4 v0x5570b5d3c930_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5570b5d3c9f0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5570b5d3c850_0, 0, 4;
    %fork t_1, S_0x5570b5d22780;
    %jmp t_0;
    .scope S_0x5570b5d22780;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5570b5d13790_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x5570b5d13790_0;
    %cmpi/s 5, 0, 32;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v0x5570b5d3c850_0;
    %parti/s 1, 3, 3;
    %flag_set/vec4 8;
    %jmp/1 T_0.4, 8;
    %load/vec4 v0x5570b5d3c850_0;
    %parti/s 3, 0, 2;
    %pad/u 32;
    %cmpi/u 5, 0, 32;
    %flag_inv 5; GE is !LT
    %flag_or 8, 5;
T_0.4;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0x5570b5d3c850_0;
    %addi 3, 0, 4;
    %store/vec4 v0x5570b5d3c850_0, 0, 4;
T_0.2 ;
    %load/vec4 v0x5570b5d3c9f0_0;
    %parti/s 1, 3, 3;
    %flag_set/vec4 8;
    %jmp/1 T_0.7, 8;
    %load/vec4 v0x5570b5d3c9f0_0;
    %parti/s 3, 0, 2;
    %pad/u 32;
    %cmpi/u 5, 0, 32;
    %flag_inv 5; GE is !LT
    %flag_or 8, 5;
T_0.7;
    %jmp/0xz  T_0.5, 8;
    %load/vec4 v0x5570b5d3c9f0_0;
    %addi 3, 0, 4;
    %store/vec4 v0x5570b5d3c9f0_0, 0, 4;
T_0.5 ;
    %load/vec4 v0x5570b5d3c9f0_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v0x5570b5d3c9f0_0, 0, 4;
    %load/vec4 v0x5570b5d3c850_0;
    %parti/s 1, 3, 3;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5570b5d3c9f0_0, 4, 1;
    %load/vec4 v0x5570b5d3c850_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v0x5570b5d3c850_0, 0, 4;
    %load/vec4 v0x5570b5d3c930_0;
    %parti/s 1, 4, 4;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5570b5d3c850_0, 4, 1;
    %load/vec4 v0x5570b5d3c930_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v0x5570b5d3c930_0, 0, 32;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5570b5d13790_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5570b5d13790_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_0x5570b5d22520;
t_0 %join;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x5570b5d118b0;
T_1 ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0x5570b5d3cd90_0, 0, 8;
    %end;
    .thread T_1;
    .scope S_0x5570b5d118b0;
T_2 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5570b5d3d020_0, 0, 32;
T_2.0 ;
    %load/vec4 v0x5570b5d3d020_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_2.1, 5;
    %load/vec4 v0x5570b5d3d020_0;
    %pad/s 5;
    %store/vec4 v0x5570b5d3cb50_0, 0, 5;
    %delay 10000, 0;
    %load/vec4 v0x5570b5d3d020_0;
    %pushi/vec4 10, 0, 32;
    %div/s;
    %pad/s 4;
    %store/vec4 v0x5570b5d3ccd0_0, 0, 4;
    %load/vec4 v0x5570b5d3d020_0;
    %pushi/vec4 10, 0, 32;
    %mod/s;
    %pad/s 4;
    %store/vec4 v0x5570b5d3cc10_0, 0, 4;
    %load/vec4 v0x5570b5d3cf80_0;
    %load/vec4 v0x5570b5d3ccd0_0;
    %cmp/e;
    %flag_get/vec4 6;
    %jmp/0 T_2.4, 6;
    %load/vec4 v0x5570b5d3ce70_0;
    %load/vec4 v0x5570b5d3cc10_0;
    %cmp/e;
    %flag_get/vec4 6;
    %and;
T_2.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.2, 8;
    %load/vec4 v0x5570b5d3cd90_0;
    %addi 1, 0, 8;
    %store/vec4 v0x5570b5d3cd90_0, 0, 8;
    %jmp T_2.3;
T_2.2 ;
    %vpi_call 2 30 "$display", "Error: Test case %0d failed", v0x5570b5d3d020_0 {0 0 0};
    %vpi_call 2 31 "$display", "  Input : 5'b%b", v0x5570b5d3cb50_0 {0 0 0};
    %vpi_call 2 32 "$display", "  Expected tens: 4'b%b, ones: 4'b%b", v0x5570b5d3ccd0_0, v0x5570b5d3cc10_0 {0 0 0};
    %vpi_call 2 33 "$display", "  Actual tens  : 4'b%b, ones: 4'b%b", v0x5570b5d3cf80_0, v0x5570b5d3ce70_0 {0 0 0};
T_2.3 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5570b5d3d020_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x5570b5d3d020_0, 0, 32;
    %jmp T_2.0;
T_2.1 ;
    %vpi_call 2 37 "$display", "%0d of %0d tests passed", v0x5570b5d3cd90_0, 32'sb00000000000000000000000000100000 {0 0 0};
    %vpi_call 2 38 "$finish" {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x5570b5d118b0;
T_3 ;
    %vpi_call 2 43 "$dumpfile", "my_design.vcd" {0 0 0};
    %vpi_call 2 44 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x5570b5d118b0 {0 0 0};
    %end;
    .thread T_3;
    .scope S_0x5570b5d118b0;
T_4 ;
    %delay 5000, 0;
    %load/vec4 v0x5570b5d3d0e0_0;
    %inv;
    %store/vec4 v0x5570b5d3d0e0_0, 0, 1;
    %jmp T_4;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "testbenches/binary_to_bcd_tb.v";
    "src/binary_to_bcd.v";
